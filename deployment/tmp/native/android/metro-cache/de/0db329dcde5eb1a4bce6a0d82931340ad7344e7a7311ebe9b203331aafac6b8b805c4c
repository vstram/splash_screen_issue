{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":0,"index":1556}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":0,"index":1556}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":0,"index":1556}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":0,"index":1556}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":0,"index":1556}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":0,"index":1556}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"avnjoAx2FQYjx6eZ7ALk+OuZk68="}},{"name":"../core/AnimatedBlock","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":44},"end":{"line":2,"column":46,"index":90}}],"key":"6gyDiq4QU4flc8Or/XN5uYrwPPw="}},{"name":"../val","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":91},"end":{"line":3,"column":29,"index":120}}],"key":"CDlYAz5y1JiXWGTtKqaFUSMXIf0="}},{"name":"./AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":121},"end":{"line":4,"column":42,"index":163}}],"key":"3roa5JYtcfxCkpexJXwVNW3mWv0="}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,_e,d){var e=r(d[0]);Object.defineProperty(_e,\"__esModule\",{value:!0}),_e.createAnimatedCond=function(e,t,n){return new _((0,f.adapt)(e),(0,f.adapt)(t),void 0===n?void 0:(0,f.adapt)(n))};var t=e(r(d[1])),n=e(r(d[2])),o=e(r(d[3])),u=e(r(d[4])),l=e(r(d[5])),c=e(r(d[6])),f=r(d[7]),s=r(d[8]),v=e(r(d[9]));function h(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}var _=(function(e){(0,o.default)(y,e);var f,_,p=(f=y,_=h(),function(){var e,t=(0,l.default)(f);if(_){var n=(0,l.default)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return(0,u.default)(this,e)});function y(e,n,o){var u;return(0,t.default)(this,y),(0,c.default)(e instanceof v.default,\"Reanimated: Animated.cond node first argument should be of type AnimatedNode but got \"+e),(0,c.default)(n instanceof v.default,\"Reanimated: Animated.cond node second argument should be of type AnimatedNode but got \"+n),(0,c.default)(o instanceof v.default||void 0===o,\"Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got \"+o),(u=p.call(this,{type:'cond',cond:e,ifBlock:n,elseBlock:o},[e,n,o]))._condition=e,u._ifBlock=n,u._elseBlock=o,u}return(0,n.default)(y,[{key:\"toString\",value:function(){return\"AnimatedCond, id: \"+this.__nodeID}},{key:\"__onEvaluate\",value:function(){return(0,s.val)(this._condition)?(0,s.val)(this._ifBlock):void 0!==this._elseBlock?(0,s.val)(this._elseBlock):void 0}}]),y})(v.default)});","lineCount":1,"map":[[1,115,51,7],[1,124,51,35,"cond"],[1,126,51,41,"ifBlock"],[1,128,51,50,"elseBlock"],[1,131,52,2],[1,138,52,9],[1,142,52,13,"AnimatedCond"],[1,145,53,4],[1,147,53,4,"adapt"],[1,149,53,4,"adapt"],[1,156,53,10,"cond"],[1,160,54,4],[1,162,54,4,"adapt"],[1,164,54,4,"adapt"],[1,171,54,10,"ifBlock"],[1,179,55,18,"undefined"],[1,183,55,4,"elseBlock"],[1,190,55,30,"undefined"],[1,193,55,42],[1,195,55,42,"adapt"],[1,197,55,42,"adapt"],[1,204,55,48,"elseBlock"],[1,278,1,0,"_invariant"],[1,280,1,0,"_interopRequireDefault"],[1,282,1,0,"r"],[1,284,1,0,"d"],[1,286,1,0],[1,291,2,0,"_AnimatedBlock"],[1,293,2,0,"r"],[1,295,2,0,"d"],[1,297,2,0],[1,301,3,0,"_val"],[1,303,3,0,"r"],[1,305,3,0,"d"],[1,307,3,0],[1,311,4,0,"_AnimatedNode2"],[1,313,4,0,"_interopRequireDefault"],[1,315,4,0,"r"],[1,317,4,0,"d"],[1,319,4,0],[1,324,4,42],[1,333,4,42,"_isNativeReflectConstruct"],[1,337,4,42],[1,340,4,42],[1,360,4,42,"Reflect"],[1,370,4,42,"Reflect"],[1,378,4,42,"construct"],[1,388,4,42],[1,395,4,42],[1,397,4,42],[1,400,4,42,"Reflect"],[1,408,4,42,"construct"],[1,418,4,42,"sham"],[1,423,4,42],[1,430,4,42],[1,432,4,42],[1,435,4,42],[1,454,4,42,"Proxy"],[1,460,4,42],[1,467,4,42],[1,469,4,42],[1,473,4,42],[1,480,4,42,"Boolean"],[1,488,4,42,"prototype"],[1,498,4,42,"valueOf"],[1,506,4,42,"call"],[1,511,4,42,"Reflect"],[1,519,4,42,"construct"],[1,529,4,42,"Boolean"],[1,540,4,42],[1,556,4,42],[1,558,4,42],[1,564,4,42,"e"],[1,567,4,42],[1,574,4,42],[1,577,4,42],[1,581,6,6,"AnimatedCond"],[1,584,6,18],[1,593,6,18,"_AnimatedNode"],[1,597,6,18],[1,599,6,18,"_inherits2"],[1,601,6,18,"default"],[1,610,6,18,"AnimatedCond"],[1,612,6,18,"_AnimatedNode"],[1,615,6,18],[1,619,4,42,"Derived"],[1,621,4,42,"hasNativeReflectConstruct"],[1,623,6,18,"_super"],[1,626,4,42,"Derived"],[1,628,6,18,"AnimatedCond"],[1,630,4,42,"hasNativeReflectConstruct"],[1,632,4,42,"_isNativeReflectConstruct"],[1,636,4,42],[1,647,4,42],[1,651,4,42,"result"],[1,653,4,42,"Super"],[1,656,4,42],[1,658,4,42,"_getPrototypeOf2"],[1,660,4,42,"default"],[1,669,4,42,"Derived"],[1,672,4,42],[1,675,4,42,"hasNativeReflectConstruct"],[1,677,4,42],[1,678,4,42],[1,682,4,42,"NewTarget"],[1,685,4,42],[1,687,4,42,"_getPrototypeOf2"],[1,689,4,42,"default"],[1,698,4,42,"this"],[1,704,4,42,"constructor"],[1,716,4,42,"result"],[1,718,4,42,"Reflect"],[1,726,4,42,"construct"],[1,736,4,42,"Super"],[1,738,4,42,"arguments"],[1,748,4,42,"NewTarget"],[1,756,4,42,"result"],[1,758,4,42,"Super"],[1,760,4,42,"apply"],[1,766,4,42,"this"],[1,771,4,42,"arguments"],[1,782,4,42],[1,789,4,42],[1,791,4,42,"_possibleConstructorReturn2"],[1,793,4,42,"default"],[1,802,4,42,"this"],[1,807,4,42,"result"],[1,812,11,2],[1,821,11,2,"AnimatedCond"],[1,823,11,14,"condition"],[1,825,11,25,"ifBlock"],[1,827,11,34,"elseBlock"],[1,830,11,45],[1,834,11,45,"_this"],[1,836,35,32],[1,843,11,45],[1,845,11,45,"_classCallCheck2"],[1,847,11,45,"default"],[1,856,11,45,"this"],[1,861,11,45,"AnimatedCond"],[1,865,12,4],[1,867,12,4,"invariant"],[1,869,12,4,"invariant"],[1,878,13,6,"condition"],[1,891,13,27,"AnimatedNode"],[1,893,13,27,"AnimatedNode"],[1,901,13,39],[1,989,14,94,"condition"],[1,993,16,4],[1,995,16,4,"invariant"],[1,997,16,4,"invariant"],[1,1006,17,6,"ifBlock"],[1,1019,17,25,"AnimatedNode"],[1,1021,17,25,"AnimatedNode"],[1,1029,17,37],[1,1118,18,95,"ifBlock"],[1,1122,20,4],[1,1124,20,4,"invariant"],[1,1126,20,4,"invariant"],[1,1135,21,6,"elseBlock"],[1,1148,21,27,"AnimatedNode"],[1,1150,21,27,"AnimatedNode"],[1,1164,21,57,"undefined"],[1,1168,21,43,"elseBlock"],[1,1170,21,66],[1,1281,22,117,"elseBlock"],[1,1285,24,4,"_this"],[1,1287,24,4,"_super"],[1,1289,24,4,"call"],[1,1294,24,4,"this"],[1,1300,26,8,"type"],[1,1305,26,14],[1,1312,27,8,"cond"],[1,1317,27,14,"condition"],[1,1319,28,8,"ifBlock"],[1,1327,28,8,"ifBlock"],[1,1329,29,8,"elseBlock"],[1,1339,29,8,"elseBlock"],[1,1343,31,7,"condition"],[1,1345,31,18,"ifBlock"],[1,1347,31,27,"elseBlock"],[1,1352,33,9,"_condition"],[1,1363,33,22,"condition"],[1,1365,34,4,"_this"],[1,1367,34,9,"_ifBlock"],[1,1376,34,20,"ifBlock"],[1,1378,35,4,"_this"],[1,1380,35,9,"_elseBlock"],[1,1391,35,22,"elseBlock"],[1,1393,35,32,"_this"],[1,1395,48,3],[1,1402,36,3],[1,1404,36,3,"_createClass2"],[1,1406,36,3,"default"],[1,1415,36,3,"AnimatedCond"],[1,1419,36,3,"key"],[1,1423,36,3],[1,1434,36,3,"value"],[1,1440,38,2],[1,1451,39,4],[1,1457,39,4],[1,1478,39,32,"this"],[1,1483,39,37,"__nodeID"],[1,1495,40,3,"key"],[1,1499,40,3],[1,1514,40,3,"value"],[1,1520,42,2],[1,1531,43,4],[1,1538,43,8],[1,1540,43,8,"val"],[1,1542,43,8,"val"],[1,1547,43,12,"this"],[1,1552,43,17,"_condition"],[1,1565,44,13],[1,1567,44,13,"val"],[1,1569,44,13,"val"],[1,1574,44,17,"this"],[1,1579,44,22,"_ifBlock"],[1,1594,46,33,"undefined"],[1,1598,46,13,"this"],[1,1603,46,18,"_elseBlock"],[1,1615,46,45],[1,1617,46,45,"val"],[1,1619,46,45,"val"],[1,1624,46,49,"this"],[1,1629,46,54,"_elseBlock"],[1,1646,46,68,"undefined"],[1,1652,48,3,"AnimatedCond"],[1,1655,6,18],[1,1656,6,27,"AnimatedNode"],[1,1658,6,27,"AnimatedNode"]],"functionMap":{"names":["<global>","AnimatedCond","constructor","toString","__onEvaluate","createAnimatedCond"],"mappings":"AAA;ACK;ECK;GDyB;EEE;GFE;EGE;GHM;CDC;OKE;CLM"}},"type":"js/module"}]}